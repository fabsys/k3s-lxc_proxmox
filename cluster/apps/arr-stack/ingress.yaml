---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: "jellyfin.fabsys.ovh"
    external-dns.alpha.kubernetes.io/target: "ip.fabsys.ovh"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx-public
  rules:
    - host: jellyfin.fabsys.ovh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096
  tls:
    - hosts:
        - jellyfin.fabsys.ovh
      secretName: jellyfin-tls-certificate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: transmission-ingress

spec:
  ingressClassName: nginx-private
  rules:
    - host: transmission.services.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: transmission
                port:
                  number: 9091
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr-ingress

spec:
  ingressClassName: nginx-private
  rules:
    - host: prowlarr.services.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 9696

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress

spec:
  ingressClassName: nginx-private
  rules:
    - host: radarr.services.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: radarr
                port:
                  number: 7878

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr-ingress

spec:
  ingressClassName: nginx-private
  rules:
    - host: sonarr.services.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarr
                port:
                  number: 8989

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyseerr-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: "jellyseerr.fabsys.ovh"
    external-dns.alpha.kubernetes.io/target: "ip.fabsys.ovh"
spec:
  ingressClassName: nginx-public
  rules:
    - host: jellyseerr.fabsys.ovh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyseerr
                port:
                  number: 5055
  tls:
    - hosts:
        - jellyseerr.fabsys.ovh
      secretName: jellyseerr-tls-certificate

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: joal-ingress

spec:
  ingressClassName: nginx-private
  rules:
    - host: joal.services.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: joal
                port:
                  number: 8080
